name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24' # 프로젝트에 맞는 Go 버전 사용

    - name: Check out code
      uses: actions/checkout@v4

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.56 # 최신 버전 확인 권장
        args: --timeout=5m # 필요에 따라 타임아웃 조정

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24' # 프로젝트에 맞는 Go 버전 사용

    - name: Check out code
      uses: actions/checkout@v4

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run Unit Tests
      run: go test -v -race ./... # -race 플래그로 데이터 경쟁 검사

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Check out code
      uses: actions/checkout@v4

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Start Docker Compose cluster
      run: docker-compose up --build -d

    - name: Wait for cluster to be healthy
      run: echo "Waiting for cluster..." && sleep 30

    - name: Run E2E Tests
      run: go test -v -timeout 120s ./test/e2e/...

    - name: Stop Docker Compose cluster
      if: always()
      run: docker-compose down -v
